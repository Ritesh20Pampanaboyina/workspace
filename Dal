using System;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;

namespace AuditApp.DataAccess
{
    public class DataAccessLayer
    {
        // Connection string from the Web.config file
        private static string connectionString = ConfigurationManager.ConnectionStrings["AuditDB"].ConnectionString;

        // Method to fetch audit data from the database
        public static DataTable GetAuditData(string auditType, DateTime startDate, DateTime endDate)
        {
            DataTable auditData = new DataTable();

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                // SQL Query to get the audit data
                string query = "SELECT * FROM AuditTable WHERE AuditType = @AuditType AND Date BETWEEN @StartDate AND @EndDate";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@AuditType", auditType);
                cmd.Parameters.AddWithValue("@StartDate", startDate);
                cmd.Parameters.AddWithValue("@EndDate", endDate);

                // Fetch data using SqlDataAdapter
                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                adapter.Fill(auditData);
            }

            return auditData;
        }

        // Insert audit record (if needed)
        public static void InsertAuditRecord(string specialist, string auditType, DateTime date, string details)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "INSERT INTO AuditTable (Specialist, AuditType, Date, Details) VALUES (@Specialist, @AuditType, @Date, @Details)";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@Specialist", specialist);
                cmd.Parameters.AddWithValue("@AuditType", auditType);
                cmd.Parameters.AddWithValue("@Date", date);
                cmd.Parameters.AddWithValue("@Details", details);

                conn.Open();
                cmd.ExecuteNonQuery();
            }
        }
    }
}
